// Generated by gencpp from file vmxpi_ros/Float.msg
// DO NOT EDIT!


#ifndef VMXPI_ROS_MESSAGE_FLOAT_H
#define VMXPI_ROS_MESSAGE_FLOAT_H

#include <ros/service_traits.h>


#include <vmxpi_ros/FloatRequest.h>
#include <vmxpi_ros/FloatResponse.h>


namespace vmxpi_ros
{

struct Float
{

typedef FloatRequest Request;
typedef FloatResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Float
} // namespace vmxpi_ros


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::vmxpi_ros::Float > {
  static const char* value()
  {
    return "73fcbf46b49191e672908e50842a83d4";
  }

  static const char* value(const ::vmxpi_ros::Float&) { return value(); }
};

template<>
struct DataType< ::vmxpi_ros::Float > {
  static const char* value()
  {
    return "vmxpi_ros/Float";
  }

  static const char* value(const ::vmxpi_ros::Float&) { return value(); }
};


// service_traits::MD5Sum< ::vmxpi_ros::FloatRequest> should match
// service_traits::MD5Sum< ::vmxpi_ros::Float >
template<>
struct MD5Sum< ::vmxpi_ros::FloatRequest>
{
  static const char* value()
  {
    return MD5Sum< ::vmxpi_ros::Float >::value();
  }
  static const char* value(const ::vmxpi_ros::FloatRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::vmxpi_ros::FloatRequest> should match
// service_traits::DataType< ::vmxpi_ros::Float >
template<>
struct DataType< ::vmxpi_ros::FloatRequest>
{
  static const char* value()
  {
    return DataType< ::vmxpi_ros::Float >::value();
  }
  static const char* value(const ::vmxpi_ros::FloatRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::vmxpi_ros::FloatResponse> should match
// service_traits::MD5Sum< ::vmxpi_ros::Float >
template<>
struct MD5Sum< ::vmxpi_ros::FloatResponse>
{
  static const char* value()
  {
    return MD5Sum< ::vmxpi_ros::Float >::value();
  }
  static const char* value(const ::vmxpi_ros::FloatResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::vmxpi_ros::FloatResponse> should match
// service_traits::DataType< ::vmxpi_ros::Float >
template<>
struct DataType< ::vmxpi_ros::FloatResponse>
{
  static const char* value()
  {
    return DataType< ::vmxpi_ros::Float >::value();
  }
  static const char* value(const ::vmxpi_ros::FloatResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VMXPI_ROS_MESSAGE_FLOAT_H
